[patterns]
shortEqualDistanceLegsMargin = legs.get(0).optionConfig.strikePrice.subtract(legs.get(1).optionConfig.strikePrice).abs().multiply(legs.get(1).optionRoot.multiplier).multiply(strategyQuantity)
threeEqualDistanceStrikeLegs = legs.get(0).optionConfig.strikePrice.subtract(legs.get(1).optionConfig.strikePrice).abs().compareTo( legs.get(1).optionConfig.strikePrice.subtract(legs.get(2).optionConfig.strikePrice).abs() ) == 0 
twoEqualDistanceWings = legs.get(0).optionConfig.strikePrice.subtract(legs.get(1).optionConfig.strikePrice).abs().compareTo( legs.get(2).optionConfig.strikePrice.subtract(legs.get(3).optionConfig.strikePrice).abs() ) == 0 
twoUnequalDistanceWings = legs.get(0).optionConfig.strikePrice.subtract(legs.get(1).optionConfig.strikePrice).abs().compareTo( legs.get(2).optionConfig.strikePrice.subtract(legs.get(3).optionConfig.strikePrice).abs() ) != 0 

twoEqualDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) == 0 
threeEqualDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) == 0 && legs.get(1).optionConfig.expiryDate.compareTo(legs.get(2).optionConfig.expiryDate) == 0 
fourEqualDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) == 0 && legs.get(1).optionConfig.expiryDate.compareTo(legs.get(2).optionConfig.expiryDate) == 0 && legs.get(2).optionConfig.expiryDate.compareTo(legs.get(3).optionConfig.expiryDate) == 0 
fourOuterLaterDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) >= 0 && legs.get(0).optionConfig.expiryDate.compareTo(legs.get(2).optionConfig.expiryDate) >= 0 && legs.get(3).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) >= 0 && legs.get(3).optionConfig.expiryDate.compareTo(legs.get(2).optionConfig.expiryDate) >= 0 

noLongStock = (pairingInfo.longDeliverables.size() != 0)
noShortStock = (pairingInfo.shortDeliverables.size() != 0)

coreUnpairedDebug1 = "((" + legs.get(0).optionRoot.deliverables.deliverablesValue + " * 0.2 + " + legs.get(0).otmAmount + ") * " + strategyQuantity + ") + " + legs.get(0).legValue.abs()
coreUnpaired1 = (legs.get(0).optionRoot.deliverables.deliverablesValue.multiply(0.2B).add(legs.get(0).otmAmount)).multiply(strategyQuantity).add(legs.get(0).legValue.abs()) 

coreUnpairedCallDebug2 = "((" + legs.get(0).optionRoot.deliverables.deliverablesValue + " + " + legs.get(0).optionRoot.deliverables.cashDeliverableValue + ") * " + strategyQuantity + " * 0.1) + " + legs.get(0).legValue.abs()
coreUnpairedCall2 = strategy.maintenanceMargin.max( legs.get(0).optionRoot.deliverables.deliverablesValue.add(legs.get(0).optionRoot.deliverables.cashDeliverableValue).multiply(strategyQuantity).multiply(0.1B).add(legs.get(0).legValue.abs()) )
coreUnpairedPutDebug2 = "(((" + legs.get(0).optionConfig.strikePrice + " * " + legs.get(0).optionRoot.multiplier + ") - " + legs.get(0).optionRoot.deliverables.cashDeliverableValue + ") * 0.1) + " + legs.get(0).legValue.abs()
coreUnpairedPut2 = strategy.maintenanceMargin.max( legs.get(0).optionConfig.strikePrice.multiply(legs.get(0).optionRoot.multiplier).subtract(legs.get(0).optionRoot.deliverables.cashDeliverableValue).multiply(0.1B).add(legs.get(0).legValue.abs()) )

[strategy/IronButterflyLong]
legs = longPuts,shortPuts,longCalls,shortCalls
legsRatio = 1,1,1,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) == 0 
pattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
pattern = ${patterns/twoEqualDistanceWings}
pattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = zero

[strategy/IronButterflyShort]
legs = longPuts,shortPuts,shortCalls,longCalls
legsRatio = 1,1,1,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) == 0 
pattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
pattern = ${patterns/twoEqualDistanceWings}
pattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = ${patterns/shortEqualDistanceLegsMargin}

[strategy/CallButterflyLong]
legs = longCalls,shortCalls,longCalls
legsRatio = 1,2,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) < 0 
pattern = ${patterns/threeEqualDistanceStrikeLegs}
pattern = ${patterns/threeEqualDateLegs}
maintenanceMargin = zero

[strategy/CallButterflyShort]
legs = shortCalls,longCalls,shortCalls
legsRatio = 1,2,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) < 0 
pattern = ${patterns/threeEqualDistanceStrikeLegs}
pattern = ${patterns/threeEqualDateLegs}
maintenanceMargin = ${patterns/shortEqualDistanceLegsMargin}

[strategy/CallCondorLong]
legs = longCalls,shortCalls,shortCalls,longCalls
legsRatio = 1,1,1,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) < 0 
pattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
pattern = ${patterns/twoEqualDistanceWings}
pattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = zero

[strategy/CallCondorShort]
legs = shortCalls,longCalls,longCalls,shortCalls
legsRatio = 1,1,1,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) < 0 
pattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
pattern = ${patterns/twoEqualDistanceWings}
pattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = ${patterns/shortEqualDistanceLegsMargin}

[strategy/CallBrokenCondorLong]
legs = longCalls,shortCalls,shortCalls,longCalls
legsRatio = 1,1,1,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) < 0 
pattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
pattern = ${patterns/twoUnequalDistanceWings}
pattern = ${patterns/fourEqualDateLegs}
# childStrategies = CallVerticalLong, CallVerticalShort
# childStrategiesLegs = [ [legs.get(0), legs.get(1)], [legs.get(2), legs.get(3)] ]
maintenanceMargin = zero

[strategy/PutBrokenCondorLong]
legs = longPuts,shortPuts,shortPuts,longPuts
legsRatio = 1,1,1,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) > 0 
pattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) > 0 
pattern = ${patterns/twoUnequalDistanceWings}
pattern = ${patterns/fourEqualDateLegs}
# childStrategies = PutVerticalLong, PutVerticalShort
# childStrategiesLegs = [ [legs.get(0), legs.get(1)], [legs.get(2), legs.get(3)] ]
maintenanceMargin = zero

[strategy/PutButterflyLong]
legs = longPuts,shortPuts,longPuts
legsRatio = 1,2,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) > 0 
pattern = ${patterns/threeEqualDistanceStrikeLegs}
pattern = ${patterns/threeEqualDateLegs}
maintenanceMargin = zero

[strategy/PutButterflyShort]
legs = shortPuts,longPuts,shortPuts
legsRatio = 1,2,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) > 0 
pattern = ${patterns/threeEqualDistanceStrikeLegs}
pattern = ${patterns/threeEqualDateLegs}
maintenanceMargin = ${patterns/shortEqualDistanceLegsMargin}

[strategy/PutCondorLong]
legs = longPuts,shortPuts,shortPuts,longPuts
legsRatio = 1,1,1,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) > 0 
pattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) > 0 
pattern = ${patterns/twoEqualDistanceWings}
pattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = zero

[strategy/PutCondorShort]
legs = shortPuts,longPuts,longPuts,shortPuts
legsRatio = 1,1,1,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) > 0 
pattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) > 0 
pattern = ${patterns/twoEqualDistanceWings}
pattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = ${patterns/shortEqualDistanceLegsMargin}

[strategy/CallVerticalShort]
legs = longCalls,shortCalls
legsRatio = 1,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
pattern = ${patterns/twoEqualDateLegs}
maintenanceMargin = ${patterns/shortEqualDistanceLegsMargin}

[strategy/PutVerticalShort]
legs = longPuts,shortPuts
legsRatio = 1,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0
pattern = ${patterns/twoEqualDateLegs}
maintenanceMargin = ${patterns/shortEqualDistanceLegsMargin}

[strategy/CallVerticalLong]
legs = longCalls,shortCalls
legsRatio = 1,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) <= 0
pattern = ${patterns/twoEqualDateLegs}
maintenanceMargin = zero

[strategy/CallVerticalLongNoStock]
legs = longCalls,shortCalls
legsRatio = 1,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) <= 0
pattern = ${patterns/twoEqualDateLegs}
pattern = ${patterns/noLongStock}
maintenanceMargin = zero

[strategy/PutVerticalLong]
legs = longPuts,shortPuts
legsRatio = 1,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) >= 0
pattern = ${patterns/twoEqualDateLegs}
maintenanceMargin = zero

[strategy/PutVerticalLongNoStock]
legs = longPuts,shortPuts
legsRatio = 1,1
pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) >= 0
pattern = ${patterns/twoEqualDateLegs}
pattern = ${patterns/noLongStock}
maintenanceMargin = zero

[strategy/CoveredCall]
legs = shortCalls,longDeliverables
legsRatio = 1,1
pattern = true
maintenanceMargin = zero

[strategy/CoveredPut]
legs = shortPuts, shortDeliverables
legsRatio = 1,1
pattern = true
maintenanceMargin = zero

[strategy/PutUnpairedShort]
legs = shortPuts
legsRatio = 1
pattern = true
marginDebug = ${patterns/coreUnpairedDebug1}
marginDebug = ${patterns/coreUnpairedPutDebug2}
maintenanceMargin = ${patterns/coreUnpaired1}
maintenanceMargin = ${patterns/coreUnpairedPut2}

[strategy/PutUnpairedLong]
legs = longPuts
legsRatio = 1
pattern = true
maintenanceMargin = zero

[strategy/CallUnpairedLong]
legs = longCalls
legsRatio = 1
pattern = true
maintenanceMargin = zero

[strategy/CallUnpairedShort]
legs = shortCalls
legsRatio = 1
pattern = true
marginDebug = ${patterns/coreUnpairedDebug1}
marginDebug = ${patterns/coreUnpairedCallDebug2}
maintenanceMargin = ${patterns/coreUnpaired1}
maintenanceMargin = ${patterns/coreUnpairedCall2}

[strategy/StockUnpairedLong]
legs = longStocks
legsRatio = 1
pattern = true
maintenanceMargin = zero

[strategy/StockUnpairedShort]
legs = shortStocks
legsRatio = 1
pattern = true
maintenanceMargin = zero


[strategyGroup/core]
# strategies = sortWideStrike, IronButterflyShort, CallButterflyLong, PutButterflyLong, CallCondorLong, PutCondorLong, CallBrokenCondorLong, PutBrokenCondorLong, sortNarrowStrike, IronButterflyLong, CallVerticalLong, PutVerticalLong, CoveredCall, CoveredPut, sortWideStrike, CallButterflyShort, PutButterflyShort, CallCondorShort, PutCondorShort, sortNarrowStrike, CallVerticalShort, PutVerticalShort, PutUnpairedShort, CallUnpairedShort, CallUnpairedLong, PutUnpairedLong, StockUnpairedLong, StockUnpairedShort
strategies = sortWideStrike, IronButterflyLong, CallButterflyLong, PutButterflyLong, CallCondorLong, PutCondorLong, CallBrokenCondorLong, PutBrokenCondorLong, sortNarrowStrike, PutVerticalLongNoStock, CallVerticalLongNoStock, CoveredCall, CoveredPut, sortWideStrike, IronButterflyShort, CallButterflyShort, PutButterflyShort, CallCondorShort, PutCondorShort, sortNarrowStrike, CallVerticalLong, PutVerticalLong, CallVerticalShort, PutVerticalShort, PutUnpairedShort, CallUnpairedShort, CallUnpairedLong, PutUnpairedLong, StockUnpairedLong, StockUnpairedShort


[patterns]
shortEqualDistanceLegsMargin = legs.get(0).optionConfig.strikePrice.subtract(legs.get(1).optionConfig.strikePrice).abs().multiply(legs.get(1).optionRoot.multiplier).multiply(strategyQuantity)
threeEqualDistanceStrikeLegs = legs.get(0).optionConfig.strikePrice.subtract(legs.get(1).optionConfig.strikePrice).abs().compareTo( legs.get(1).optionConfig.strikePrice.subtract(legs.get(2).optionConfig.strikePrice).abs() ) == 0 
twoEqualDistanceWings = legs.get(0).optionConfig.strikePrice.subtract(legs.get(1).optionConfig.strikePrice).abs().compareTo( legs.get(2).optionConfig.strikePrice.subtract(legs.get(3).optionConfig.strikePrice).abs() ) == 0 
twoUnequalDistanceWings = legs.get(0).optionConfig.strikePrice.subtract(legs.get(1).optionConfig.strikePrice).abs().compareTo( legs.get(2).optionConfig.strikePrice.subtract(legs.get(3).optionConfig.strikePrice).abs() ) != 0 

twoEqualDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) == 0 
threeEqualDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) == 0 && legs.get(1).optionConfig.expiryDate.compareTo(legs.get(2).optionConfig.expiryDate) == 0 
fourEqualDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) == 0 && legs.get(1).optionConfig.expiryDate.compareTo(legs.get(2).optionConfig.expiryDate) == 0 && legs.get(2).optionConfig.expiryDate.compareTo(legs.get(3).optionConfig.expiryDate) == 0 
fourOuterLaterDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) >= 0 && legs.get(0).optionConfig.expiryDate.compareTo(legs.get(2).optionConfig.expiryDate) >= 0 && legs.get(3).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) >= 0 && legs.get(3).optionConfig.expiryDate.compareTo(legs.get(2).optionConfig.expiryDate) >= 0 

coreUnpairedDebug1 = "((" + legs.get(0).optionRoot.deliverables.deliverablesValue + " * 0.2 + " + legs.get(0).otmAmount + ") * " + strategyQuantity + ") + " + legs.get(0).legValue.abs()
coreUnpaired1 = (legs.get(0).optionRoot.deliverables.deliverablesValue.multiply(0.2B).add(legs.get(0).otmAmount)).multiply(strategyQuantity).add(legs.get(0).legValue.abs()) 

coreUnpairedCallDebug2 = "(" + legs.get(0).optionRoot.deliverables.deliverablesValue + " * " + strategyQuantity + " * 0.1) + " + legs.get(0).legValue.abs()
coreUnpairedCall2 = strategy.margin.max( legs.get(0).optionRoot.deliverables.deliverablesValue.multiply(strategyQuantity).multiply(0.1B).add(legs.get(0).legValue.abs()) )
coreUnpairedPutDebug2 = "(" + legs.get(0).optionConfig.strikePrice + " * " + legs.get(0).optionRoot.multiplier + " * 0.1) + " + legs.get(0).legValue.abs()
coreUnpairedPut2 = strategy.margin.max( legs.get(0).optionConfig.strikePrice.multiply(legs.get(0).optionRoot.multiplier).multiply(0.1B).add(legs.get(0).legValue.abs()) )

[strategyGroup/core]
strategies = sortWideStrike, IronButterflyLong, CallButterflyLong, PutButterflyLong, CallCondorLong, PutCondorLong, CallBrokenCondorLong, IronButterflyShort, CallButterflyShort, PutButterflyShort, CallCondorShort, PutCondorShort, sortNarrowStrike, CallVerticalLong, PutVerticalLong, CallVerticalShort, PutVerticalShort, PutUnpairedShort, CallUnpairedShort, CallUnpairedLong, PutUnpairedLong

IronButterflyLong.legs = longPuts,shortPuts,longCalls,shortCalls
IronButterflyLong.legsRatio = 1,1,1,1
IronButterflyLong.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
IronButterflyLong.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) == 0 
IronButterflyLong.pattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
IronButterflyLong.pattern = ${patterns/twoEqualDistanceWings}
IronButterflyLong.pattern = ${patterns/fourEqualDateLegs}
IronButterflyLong.margin = zero

IronButterflyShort.legs = longPuts,shortPuts,shortCalls,longCalls
IronButterflyShort.legsRatio = 1,1,1,1
IronButterflyShort.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
IronButterflyShort.pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) == 0 
IronButterflyShort.pattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
IronButterflyShort.pattern = ${patterns/twoEqualDistanceWings}
IronButterflyShort.pattern = ${patterns/fourEqualDateLegs}
IronButterflyShort.margin = ${patterns/shortEqualDistanceLegsMargin}

CallButterflyLong.legs = longCalls,shortCalls,longCalls
CallButterflyLong.legsRatio = 1,2,1
CallButterflyLong.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
CallButterflyLong.pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) < 0 
CallButterflyLong.pattern = ${patterns/threeEqualDistanceStrikeLegs}
CallButterflyLong.pattern = ${patterns/threeEqualDateLegs}
CallButterflyLong.margin = zero

CallButterflyShort.legs = shortCalls,longCalls,shortCalls
CallButterflyShort.legsRatio = 1,2,1
CallButterflyShort.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
CallButterflyShort.pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) < 0 
CallButterflyShort.pattern = ${patterns/threeEqualDistanceStrikeLegs}
CallButterflyShort.pattern = ${patterns/threeEqualDateLegs}
CallButterflyShort.margin = ${patterns/shortEqualDistanceLegsMargin}

CallCondorLong.legs = longCalls,shortCalls,shortCalls,longCalls
CallCondorLong.legsRatio = 1,1,1,1
CallCondorLong.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
CallCondorLong.pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) < 0 
CallCondorLong.pattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
CallCondorLong.pattern = ${patterns/twoEqualDistanceWings}
CallCondorLong.pattern = ${patterns/fourEqualDateLegs}
CallCondorLong.margin = zero

CallCondorShort.legs = shortCalls,longCalls,longCalls,shortCalls
CallCondorShort.legsRatio = 1,1,1,1
CallCondorShort.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
CallCondorShort.pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) < 0 
CallCondorShort.pattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
CallCondorShort.pattern = ${patterns/twoEqualDistanceWings}
CallCondorShort.pattern = ${patterns/fourEqualDateLegs}
CallCondorShort.margin = ${patterns/shortEqualDistanceLegsMargin}

CallBrokenCondorLong.legs = longCalls,shortCalls,shortCalls,longCalls
CallBrokenCondorLong.legsRatio = 1,1,1,1
CallBrokenCondorLong.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
CallBrokenCondorLong.pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) < 0 
CallBrokenCondorLong.pattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
CallBrokenCondorLong.pattern = ${patterns/twoUnequalDistanceWings}
CallBrokenCondorLong.pattern = ${patterns/fourEqualDateLegs}
# CallBrokenCondorLong.childStrategies = CallVerticalLong, CallVerticalShort
# CallBrokenCondorLong.childStrategiesLegs = [ [legs.get(0), legs.get(1)], [legs.get(2), legs.get(3)] ]
CallBrokenCondorLong.margin = zero

PutButterflyLong.legs = longPuts,shortPuts,longPuts
PutButterflyLong.legsRatio = 1,2,1
PutButterflyLong.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
PutButterflyLong.pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) > 0 
PutButterflyLong.pattern = ${patterns/threeEqualDistanceStrikeLegs}
PutButterflyLong.pattern = ${patterns/threeEqualDateLegs}
PutButterflyLong.margin = zero

PutButterflyShort.legs = shortPuts,longPuts,shortPuts
PutButterflyShort.legsRatio = 1,2,1
PutButterflyShort.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
PutButterflyShort.pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) > 0 
PutButterflyShort.pattern = ${patterns/threeEqualDistanceStrikeLegs}
PutButterflyShort.pattern = ${patterns/threeEqualDateLegs}
PutButterflyShort.margin = ${patterns/shortEqualDistanceLegsMargin}

PutCondorLong.legs = longPuts,shortPuts,shortPuts,longPuts
PutCondorLong.legsRatio = 1,1,1,1
PutCondorLong.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
PutCondorLong.pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) > 0 
PutCondorLong.pattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) > 0 
PutCondorLong.pattern = ${patterns/twoEqualDistanceWings}
PutCondorLong.pattern = ${patterns/fourEqualDateLegs}
PutCondorLong.margin = zero

PutCondorShort.legs = shortPuts,longPuts,longPuts,shortPuts
PutCondorShort.legsRatio = 1,1,1,1
PutCondorShort.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
PutCondorShort.pattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) > 0 
PutCondorShort.pattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) > 0 
PutCondorShort.pattern = ${patterns/twoEqualDistanceWings}
PutCondorShort.pattern = ${patterns/fourEqualDateLegs}
PutCondorShort.margin = ${patterns/shortEqualDistanceLegsMargin}

CallVerticalShort.legs = longCalls,shortCalls
CallVerticalShort.legsRatio = 1,1
CallVerticalShort.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
CallVerticalShort.pattern = ${patterns/twoEqualDateLegs}
CallVerticalShort.margin = ${patterns/shortEqualDistanceLegsMargin}

PutVerticalShort.legs = longPuts,shortPuts
PutVerticalShort.legsRatio = 1,1
PutVerticalShort.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0
PutVerticalShort.pattern = ${patterns/twoEqualDateLegs}
PutVerticalShort.margin = ${patterns/shortEqualDistanceLegsMargin}

CallVerticalLong.legs = longCalls,shortCalls
CallVerticalLong.legsRatio = 1,1
CallVerticalLong.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) <= 0
CallVerticalLong.pattern = ${patterns/twoEqualDateLegs}
CallVerticalLong.margin = zero

PutVerticalLong.legs = longPuts,shortPuts
PutVerticalLong.legsRatio = 1,1
PutVerticalLong.pattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) >= 0
PutVerticalLong.pattern = ${patterns/twoEqualDateLegs}
PutVerticalLong.margin = zero

PutUnpairedShort.legs = shortPuts
PutUnpairedShort.legsRatio = 1
PutUnpairedShort.pattern = true
PutUnpairedShort.marginDebug = ${patterns/coreUnpairedDebug1}
PutUnpairedShort.marginDebug = ${patterns/coreUnpairedPutDebug2}
PutUnpairedShort.margin = ${patterns/coreUnpaired1}
PutUnpairedShort.margin = ${patterns/coreUnpairedPut2}

PutUnpairedLong.legs = longPuts
PutUnpairedLong.legsRatio = 1
PutUnpairedLong.pattern = true
PutUnpairedLong.margin = zero

CallUnpairedLong.legs = longCalls
CallUnpairedLong.legsRatio = 1
CallUnpairedLong.pattern = true
CallUnpairedLong.margin = zero

CallUnpairedShort.legs = shortCalls
CallUnpairedShort.legsRatio = 1
CallUnpairedShort.pattern = true
CallUnpairedShort.marginDebug = ${patterns/coreUnpairedDebug1}
CallUnpairedShort.marginDebug = ${patterns/coreUnpairedCallDebug2}
CallUnpairedShort.margin = ${patterns/coreUnpaired1}
CallUnpairedShort.margin = ${patterns/coreUnpairedCall2}

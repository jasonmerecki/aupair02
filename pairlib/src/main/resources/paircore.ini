#################################################
## global configs
#################################################
[global]
defaultStrategyGroup = core
testLeastMargin = maintenance
maintenancePct = 0.25
nakedDeliverablePct = 0.2
nakedCashPct = 0.1

#################################################
## common patterns
#################################################
[patterns]
## width patterns
threeEqualDistanceStrikeLegs = legs.get(0).optionConfig.strikePrice.subtract(legs.get(1).optionConfig.strikePrice).abs().compareTo( legs.get(1).optionConfig.strikePrice.subtract(legs.get(2).optionConfig.strikePrice).abs() ) == 0 
threeUnequalDistanceStrikeLegs = legs.get(0).optionConfig.strikePrice.subtract(legs.get(1).optionConfig.strikePrice).abs().compareTo( legs.get(1).optionConfig.strikePrice.subtract(legs.get(2).optionConfig.strikePrice).abs() ) > 0 

twoEqualDistanceWings = legs.get(0).optionConfig.strikePrice.subtract(legs.get(1).optionConfig.strikePrice).abs().compareTo( legs.get(2).optionConfig.strikePrice.subtract(legs.get(3).optionConfig.strikePrice).abs() ) == 0 
twoUnequalDistanceWings = legs.get(0).optionConfig.strikePrice.subtract(legs.get(1).optionConfig.strikePrice).abs().compareTo( legs.get(2).optionConfig.strikePrice.subtract(legs.get(3).optionConfig.strikePrice).abs() ) > 0 

twoEqualStrikeLegs = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) == 0


## expiration patterns
twoEqualDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) == 0 
twoLongLaterDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) > 0 

threeEqualDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) == 0 && legs.get(1).optionConfig.expiryDate.compareTo(legs.get(2).optionConfig.expiryDate) == 0 
threeOuterLaterDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) >= 0 && legs.get(1).optionConfig.expiryDate.compareTo(legs.get(2).optionConfig.expiryDate) <= 0 
threeInnerLaterDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) <= 0 && legs.get(1).optionConfig.expiryDate.compareTo(legs.get(2).optionConfig.expiryDate) >= 0 

fourEqualDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) == 0 && legs.get(1).optionConfig.expiryDate.compareTo(legs.get(2).optionConfig.expiryDate) == 0 && legs.get(2).optionConfig.expiryDate.compareTo(legs.get(3).optionConfig.expiryDate) == 0 
fourOuterLaterDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) >= 0 && legs.get(3).optionConfig.expiryDate.compareTo(legs.get(2).optionConfig.expiryDate) >= 0 && legs.get(1).optionConfig.expiryDate.compareTo(legs.get(2).optionConfig.expiryDate) == 0  
fourInnerLaterDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) <= 0 && legs.get(3).optionConfig.expiryDate.compareTo(legs.get(2).optionConfig.expiryDate) <= 0 && legs.get(0).optionConfig.expiryDate.compareTo(legs.get(3).optionConfig.expiryDate) == 0  

ironOuterLaterDateLegs = legs.get(0).optionConfig.expiryDate.compareTo(legs.get(1).optionConfig.expiryDate) >= 0 && legs.get(2).optionConfig.expiryDate.compareTo(legs.get(3).optionConfig.expiryDate) >= 0 && legs.get(1).optionConfig.expiryDate.compareTo(legs.get(3).optionConfig.expiryDate) == 0  


## other patterns
noLongStock = (pairingInfo.longDeliverables.size() != 0)
noShortStock = (pairingInfo.shortDeliverables.size() != 0)
noEuropeanExerciseStyle = legs.get(0).optionRoot.exerciseStyle.styleType.equals(exerciseEuropean) == false


## margin patterns
shortEqualDistanceLegsMargin = legs.get(0).optionConfig.strikePrice.subtract(legs.get(1).optionConfig.strikePrice).abs().multiply(legs.get(1).optionRoot.multiplier).multiply(strategyQuantity)

coreUnpairedDebug1 = "((" + legs.get(0).deliverablesValue + " * 0.2 + " + legs.get(0).otmAmount + ") * " + strategyQuantity + ") + " + legs.get(0).legValue.abs()
coreUnpaired1 = (nakedLeg.deliverablesValue.multiply(nakedDeliverablePct).add(nakedLeg.otmAmount)).multiply(strategyQuantity).add(nakedLeg.legValue.abs()) 

coreUnpairedCallDebug2 = "((" + legs.get(0).deliverablesValue + " + " + legs.get(0).cashDeliverableValue + ") * " + strategyQuantity + " * 0.1) + " + legs.get(0).legValue.abs()
coreUnpairedPutDebug2 = "(((" + legs.get(0).strikePrice + " * " + legs.get(0).multiplier + ") - " + legs.get(0).cashDeliverableValue + ") * " + strategyQuantity + " * 0.1) + " + legs.get(0).legValue.abs()


#################################################
## naked margins
#################################################
[nakedMargins]
nakedCallMargin = ${patterns/coreUnpaired1}
nakedCallMargin = strategy.pureNakedLastResult.max( nakedLeg.deliverablesValue.add(nakedLeg.cashDeliverableValue).multiply(strategyQuantity).multiply(nakedCashPct).add(nakedLeg.legValue.abs()) )
nakedPutMargin = ${patterns/coreUnpaired1}
nakedPutMargin = strategy.pureNakedLastResult.max( nakedLeg.strikePrice.multiply(nakedLeg.multiplier).subtract(nakedLeg.cashDeliverableValue).multiply(strategyQuantity).multiply(nakedCashPct).add(nakedLeg.legValue.abs()) )


#################################################
## core strategies
#################################################

## iron wings

[strategy/IronButterflyLong]
legs = longPuts,shortPuts,longCalls,shortCalls
legsRatio = 1,1,1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) == 0 
strikesPattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
widthPattern = ${patterns/twoEqualDistanceWings}
expirationPattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = zero

[strategy/IronButterflyCalendarLong]
parentStrategy = IronButterflyLong
expirationPattern = ${patterns/ironOuterLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}

[strategy/IronButterflyShort]
legs = longPuts,shortPuts,longCalls,shortCalls
legsRatio = 1,1,1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
strikesPattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) == 0 
strikesPattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) > 0 
widthPattern = ${patterns/twoEqualDistanceWings}
expirationPattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = ${patterns/shortEqualDistanceLegsMargin}

[strategy/IronButterflyCalendarShort]
parentStrategy = IronButterflyShort
expirationPattern = ${patterns/ironOuterLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}

[strategy/IronCondorLong]
legs = longPuts,shortPuts,longCalls,shortCalls
legsRatio = 1,1,1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) < 0 
strikesPattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
widthPattern = ${patterns/twoEqualDistanceWings}
expirationPattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = zero

[strategy/IronCondorCalendarLong]
parentStrategy = IronCondorLong
expirationPattern = ${patterns/ironOuterLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}

[strategy/IronCondorShort]
legs = longPuts,shortPuts,longCalls,shortCalls
legsRatio = 1,1,1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
strikesPattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
strikesPattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) > 0 
widthPattern = ${patterns/twoEqualDistanceWings}
expirationPattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = ${patterns/shortEqualDistanceLegsMargin}

[strategy/IronCondorCalendarShort]
parentStrategy = IronCondorShort
expirationPattern = ${patterns/ironOuterLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}


## call wings

[strategy/CallButterflyLong]
legs = longCalls,shortCalls,longCalls
legsRatio = 1,2,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
strikesPattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) < 0 
widthPattern = ${patterns/threeEqualDistanceStrikeLegs}
expirationPattern = ${patterns/threeEqualDateLegs}
maintenanceMargin = zero

[strategy/CallBrokenButterflyLong]
parentStrategy = CallButterflyLong
widthPattern = ${patterns/threeUnequalDistanceStrikeLegs}

[strategy/CallButterflyCalendarLong]
parentStrategy = CallButterflyLong
expirationPattern = ${patterns/threeOuterLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}

[strategy/CallButterflyShort]
legs = shortCalls,longCalls,shortCalls
legsRatio = 1,2,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
strikesPattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) < 0 
widthPattern = ${patterns/threeEqualDistanceStrikeLegs}
expirationPattern = ${patterns/threeEqualDateLegs}
maintenanceMargin = ${patterns/shortEqualDistanceLegsMargin}

[strategy/CallButterflyCalendarShort]
parentStrategy = CallButterflyShort
expirationPattern = ${patterns/threeInnerLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}

[strategy/CallCondorLong]
legs = longCalls,shortCalls,shortCalls,longCalls
legsRatio = 1,1,1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
strikesPattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) < 0 
strikesPattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
widthPattern = ${patterns/twoEqualDistanceWings}
expirationPattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = zero

[strategy/CallBrokenCondorLong]
parentStrategy = CallCondorLong
widthPattern = ${patterns/twoUnequalDistanceWings}
# childStrategies = CallVerticalLong, CallVerticalShort
# childStrategiesLegs = [ [legs.get(0), legs.get(1)], [legs.get(2), legs.get(3)] ]

[strategy/CallCondorCalendarLong]
parentStrategy = CallCondorLong
expirationPattern = ${patterns/fourOuterLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}

[strategy/CallCondorShort]
legs = shortCalls,longCalls,longCalls,shortCalls
legsRatio = 1,1,1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
strikesPattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) < 0 
strikesPattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
widthPattern = ${patterns/twoEqualDistanceWings}
expirationPattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = ${patterns/shortEqualDistanceLegsMargin}

[strategy/CallCondorCalendarShort]
parentStrategy = CallCondorShort
expirationPattern = ${patterns/fourInnerLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}


## put wings

[strategy/PutButterflyLong]
legs = longPuts,shortPuts,longPuts
legsRatio = 1,2,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
strikesPattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) > 0 
widthPattern = ${patterns/threeEqualDistanceStrikeLegs}
expirationPattern = ${patterns/threeEqualDateLegs}
maintenanceMargin = zero

[strategy/PutBrokenButterflyLong]
parentStrategy = PutButterflyLong
widthPattern = ${patterns/threeUnequalDistanceStrikeLegs}

[strategy/PutButterflyCalendarLong]
parentStrategy = PutButterflyLong
expirationPattern = ${patterns/threeOuterLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}

[strategy/PutButterflyShort]
legs = shortPuts,longPuts,shortPuts
legsRatio = 1,2,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
strikesPattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) > 0 
widthPattern = ${patterns/threeEqualDistanceStrikeLegs}
expirationPattern = ${patterns/threeEqualDateLegs}
maintenanceMargin = ${patterns/shortEqualDistanceLegsMargin}

[strategy/PutButterflyCalendarShort]
parentStrategy = PutButterflyShort
expirationPattern = ${patterns/threeInnerLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}

[strategy/PutCondorLong]
legs = longPuts,shortPuts,shortPuts,longPuts
legsRatio = 1,1,1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
strikesPattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) > 0 
strikesPattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) > 0 
widthPattern = ${patterns/twoEqualDistanceWings}
expirationPattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = zero

[strategy/PutBrokenCondorLong]
parentStrategy = PutCondorLong
widthPattern = ${patterns/twoUnequalDistanceWings}
# childStrategies = PutVerticalLong, PutVerticalShort
# childStrategiesLegs = [ [legs.get(0), legs.get(1)], [legs.get(2), legs.get(3)] ]

[strategy/PutCondorCalendarLong]
parentStrategy = PutCondorLong
expirationPattern = ${patterns/fourOuterLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}

[strategy/PutCondorShort]
legs = shortPuts,longPuts,longPuts,shortPuts
legsRatio = 1,1,1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
strikesPattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) > 0 
strikesPattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) > 0 
widthPattern = ${patterns/twoEqualDistanceWings}
expirationPattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = ${patterns/shortEqualDistanceLegsMargin}

[strategy/PutCondorCalendarShort]
parentStrategy = PutCondorShort
expirationPattern = ${patterns/fourInnerLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}


## Box spreads

[strategy/LongBoxSpread]
legs = shortPuts,longPuts,longCalls,shortCalls
legsRatio = 1,1,1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) == 0 
strikesPattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) == 0 
strikesPattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) < 0 
# widthPattern = ${patterns/twoEqualDistanceWings}
expirationPattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = zero

[strategy/ShortBoxSpread]
legs = shortPuts,longPuts,longCalls,shortCalls
legsRatio = 1,1,1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0 
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) == 0 
strikesPattern = legs.get(1).optionConfig.strikePrice.compareTo(legs.get(2).optionConfig.strikePrice) == 0 
strikesPattern = legs.get(2).optionConfig.strikePrice.compareTo(legs.get(3).optionConfig.strikePrice) > 0 
# widthPattern = ${patterns/twoEqualDistanceWings}
expirationPattern = ${patterns/fourEqualDateLegs}
maintenanceMargin = legs.get(0).optionConfig.strikePrice.subtract(legs.get(3).optionConfig.strikePrice).abs().multiply(legs.get(3).optionRoot.multiplier).multiply(strategyQuantity)

## call verticals (including calendars)

[strategy/CallVerticalShort]
legs = longCalls,shortCalls
legsRatio = 1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
expirationPattern = ${patterns/twoEqualDateLegs}
maintenanceMargin = ${patterns/shortEqualDistanceLegsMargin}

[strategy/CallVerticalCalendarShort]
parentStrategy = CallVerticalShort
expirationPattern = ${patterns/twoLongLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}

[strategy/CallVerticalLong]
legs = longCalls,shortCalls
legsRatio = 1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) <= 0
expirationPattern = ${patterns/twoEqualDateLegs}
maintenanceMargin = zero

[strategy/CallVerticalCalendarLong]
parentStrategy = CallVerticalLong
expirationPattern = ${patterns/twoLongLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}

[strategy/CallVerticalLongNoStock]
parentStrategy = CallVerticalLong
otherPattern = ${patterns/noLongStock}

[strategy/CallVerticalCalendarLongNoStock]
parentStrategy = CallVerticalCalendarLong
otherPattern = ${patterns/noLongStock}
otherPattern = ${patterns/noEuropeanExerciseStyle}


## put verticals (including calendars)

[strategy/PutVerticalShort]
legs = longPuts,shortPuts
legsRatio = 1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) < 0
expirationPattern = ${patterns/twoEqualDateLegs}
maintenanceMargin = ${patterns/shortEqualDistanceLegsMargin}

[strategy/PutVerticalCalendarShort]
parentStrategy = PutVerticalShort
expirationPattern = ${patterns/twoLongLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}

[strategy/PutVerticalLong]
legs = longPuts,shortPuts
legsRatio = 1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) >= 0
expirationPattern = ${patterns/twoEqualDateLegs}
maintenanceMargin = zero

[strategy/PutVerticalCalendarLong]
parentStrategy = PutVerticalLong
expirationPattern = ${patterns/twoLongLaterDateLegs}
otherPattern = ${patterns/noEuropeanExerciseStyle}

[strategy/PutVerticalLongNoStock]
parentStrategy = PutVerticalLong
otherPattern = ${patterns/noShortStock}

[strategy/PutVerticalCalendarLongNoStock]
parentStrategy = PutVerticalCalendarLong
otherPattern = ${patterns/noShortStock}
otherPattern = ${patterns/noEuropeanExerciseStyle}


## mixed deliverable-option strategies

[strategy/CoveredCall]
legs = shortCalls,longDeliverables
legsRatio = 1,1
maintenanceMargin = strategyQuantity.multiply(legs.get(0).weightedItmCompliment)
initial = zero

[strategy/CoveredPut]
legs = shortPuts, shortDeliverables
legsRatio = 1,1
maintenanceMargin = zero

[strategy/Conversion]
legs = shortCalls, longPuts, longDeliverables
legsRatio = 1,1,1
strikesPattern = ${patterns/twoEqualStrikeLegs}
expirationPattern = ${patterns/twoEqualDateLegs}
maintenanceMargin = legs.get(0).optionConfig.strikePrice.multiply(legs.get(0).optionRoot.multiplier).multiply(strategyQuantity).multiply(0.1B).add(legs.get(0).optionRoot.deliverables.cashDeliverableValue)
initialMargin = zero

[strategy/Reversal]
legs = shortPuts, longCalls, shortDeliverables
legsRatio = 1,1,1
strikesPattern = ${patterns/twoEqualStrikeLegs}
expirationPattern = ${patterns/twoEqualDateLegs}
maintenanceMargin = legs.get(0).optionConfig.strikePrice.multiply(legs.get(0).optionRoot.multiplier).multiply(strategyQuantity).multiply(0.1B).add(legs.get(0).optionRoot.deliverables.cashDeliverableValue)
initialMargin = zero

[strategy/Collar]
legs = shortCalls, longPuts, longDeliverables
legsRatio = 1,1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) > 0 
expirationPattern = ${patterns/twoEqualDateLegs}
maintenanceMargin = zero
initialMargin = zero

[strategy/ProtectiveCall]
legs = longCalls, shortDeliverables
legsRatio = 1,1
maintenanceMargin = zero
initialMargin = zero

[strategy/ProtectivePut]
legs = longPuts, longDeliverables
legsRatio = 1,1
maintenanceMargin = zero
initialMargin = zero


## straddle/strangle (two naked legs)

[strategy/ShortStraddle]
legs = shortPuts, shortCalls
legsRatio = 1,1
strikesPattern = legs.get(0).optionConfig.strikePrice.compareTo(legs.get(1).optionConfig.strikePrice) <= 0 
expirationPattern = ${patterns/twoEqualDateLegs}
maintenanceMargin = strategy.pureNakedPutMargin.max(strategy.pureNakedCallMargin).add( strategy.pureNakedPutMargin.compareTo(strategy.pureNakedCallMargin) > 0 ? legs.get(1).legValue.abs() : legs.get(0).legValue.abs() ) 


## single legs (unpaired)

[strategy/PutUnpairedShort]
legs = shortPuts
legsRatio = 1
marginDebug = ${patterns/coreUnpairedDebug1}
marginDebug = ${patterns/coreUnpairedPutDebug2}
maintenanceMargin = strategy.pureNakedPutMargin

[strategy/PutUnpairedLong]
legs = longPuts
legsRatio = 1
maintenanceMargin = zero

[strategy/PutCashSecured]
legs = shortPuts
legsRatio = 1
maintenanceMargin = legs.get(0).strikePrice.multiply(legs.get(0).multiplier).subtract(legs.get(0).cashDeliverableValue).multiply(strategyQuantity)
allowLowerNaked = false

[strategy/CallUnpairedLong]
legs = longCalls
legsRatio = 1
maintenanceMargin = zero

[strategy/CallUnpairedShort]
legs = shortCalls
legsRatio = 1
marginDebug = ${patterns/coreUnpairedDebug1}
marginDebug = ${patterns/coreUnpairedCallDebug2}
maintenanceMargin = strategy.pureNakedCallMargin

[strategy/StockUnpairedLong]
legs = longStocks
legsRatio = 1
maintenanceMargin = zero

[strategy/StockUnpairedShort]
legs = shortStocks
legsRatio = 1
maintenanceMargin = zero


#################################################
## core strategy groups
#################################################

[strategyGroup/core]
strategyLists = coreList1, coreList2
coreList1 = sortWideStrike
coreList1 = CallButterflyLong, PutButterflyLong, CallCondorLong, PutCondorLong
coreList1 = CallButterflyCalendarLong, PutButterflyCalendarLong, CallCondorCalendarLong, PutCondorCalendarLong
coreList1 = CallBrokenCondorLong, PutBrokenCondorLong, CallBrokenButterflyLong, PutBrokenButterflyLong
coreList1 = sortNarrowStrike
coreList1 = PutVerticalLongNoStock, PutVerticalCalendarLongNoStock, CallVerticalLongNoStock, CallVerticalCalendarLongNoStock
coreList1 = CoveredCall, CoveredPut
coreList1 = sortWideStrike
coreList1 = CallButterflyShort, PutButterflyShort, CallCondorShort, PutCondorShort
coreList1 = CallButterflyCalendarShort, PutButterflyCalendarShort, CallCondorCalendarShort, PutCondorCalendarShort
coreList1 = sortWideStrike
coreList1 = IronButterflyLong, IronCondorLong, IronButterflyCalendarLong, IronCondorCalendarLong
coreList1 = IronButterflyShort, IronCondorShort, IronButterflyCalendarShort, IronCondorCalendarShort
coreList1 = sortNarrowStrike
coreList1 = CallVerticalLong, PutVerticalLong, CallVerticalCalendarLong, PutVerticalCalendarLong, CallVerticalShort, PutVerticalShort, CallVerticalCalendarShort, PutVerticalCalendarShort
coreList1 = ProtectiveCall, ProtectivePut
coreList1 = ShortStraddle, PutUnpairedShort, CallUnpairedShort, CallUnpairedLong, PutUnpairedLong, StockUnpairedLong, StockUnpairedShort

coreList2 = sortWideStrike
coreList2 = IronButterflyLong, IronCondorLong, IronButterflyCalendarLong, IronCondorCalendarLong
coreList2 = IronButterflyShort, IronCondorShort, IronButterflyCalendarShort, IronCondorCalendarShort
coreList2 = CallButterflyLong, PutButterflyLong, CallCondorLong, PutCondorLong
coreList2 = CallButterflyCalendarLong, PutButterflyCalendarLong, CallCondorCalendarLong, PutCondorCalendarLong
coreList2 = sortNarrowStrike
coreList2 = PutVerticalLongNoStock, PutVerticalCalendarLongNoStock, CallVerticalLongNoStock, CallVerticalCalendarLongNoStock
coreList2 = CoveredCall, CoveredPut
coreList2 = sortWideStrike
coreList2 = CallBrokenCondorLong, PutBrokenCondorLong, CallBrokenButterflyLong, PutBrokenButterflyLong
coreList2 = CallButterflyShort, PutButterflyShort, CallCondorShort, PutCondorShort
coreList2 = CallButterflyCalendarShort, PutButterflyCalendarShort, CallCondorCalendarShort, PutCondorCalendarShort
coreList2 = sortNarrowStrike
coreList2 = CallVerticalLong, PutVerticalLong, CallVerticalCalendarLong, PutVerticalCalendarLong, CallVerticalShort, PutVerticalShort, CallVerticalCalendarShort, PutVerticalCalendarShort
coreList2 = ProtectiveCall, ProtectivePut
coreList2 = ShortStraddle, PutUnpairedShort, CallUnpairedShort, CallUnpairedLong, PutUnpairedLong, StockUnpairedLong, StockUnpairedShort


[strategyGroup/pairEach]
strategyLists = pairEach
pairEach = sortWideStrike
pairEach = CallButterflyLong, PutButterflyLong, CallCondorLong, PutCondorLong
pairEach = CallButterflyCalendarLong, PutButterflyCalendarLong, CallCondorCalendarLong, PutCondorCalendarLong
pairEach = CallBrokenCondorLong, PutBrokenCondorLong, CallBrokenButterflyLong, PutBrokenButterflyLong
pairEach = PutVerticalLongNoStock, PutVerticalCalendarLongNoStock, CallVerticalLongNoStock, CallVerticalCalendarLongNoStock
pairEach = Conversion, Reversal, Collar, LongBoxSpread, ShortBoxSpread
pairEach = CoveredCall, CoveredPut
pairEach = CallButterflyShort, PutButterflyShort, CallCondorShort, PutCondorShort
pairEach = CallButterflyCalendarShort, PutButterflyCalendarShort, CallCondorCalendarShort, PutCondorCalendarShort
pairEach = IronButterflyLong, IronCondorLong, IronButterflyCalendarLong, IronCondorCalendarLong
pairEach = IronButterflyShort, IronCondorShort, IronButterflyCalendarShort, IronCondorCalendarShort
pairEach = sortNarrowStrike
pairEach = CallVerticalLong, PutVerticalLong, CallVerticalCalendarLong, PutVerticalCalendarLong, CallVerticalShort, PutVerticalShort, CallVerticalCalendarShort, PutVerticalCalendarShort
pairEach = ProtectiveCall, ProtectivePut
pairEach = ShortStraddle, PutUnpairedShort, CallUnpairedShort, CallUnpairedLong, PutUnpairedLong, StockUnpairedLong, StockUnpairedShort

[strategyGroup/cashSecured]
strategyLists = cashSecured
cashSecured = PutCashSecured


